package com.authorizationServer.service;

import java.util.Collection;
import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.authorizationServer.entity.User;
import com.authorizationServer.repository.UserRepository;

@Service
@Transactional
public class CustomUserDetailsService implements UserDetailsService{

	@Autowired
	UserRepository userRepository;
	
	@Override
	public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {
		User user = userRepository.findByEmail(email);
		if(user == null) {
			throw new UsernameNotFoundException("No user found");
		}
		return org.springframework.security.core.userdetails.User(
				user.getEmail(),
				user.getPassword(),
				use.isEnabled(),
				true,
				true,
				true,
				getAuthorities(List.of(user.getRole()))
				);
	}

	private Collection<? extends GrantedAuthority> getAuthorities(List<String> role) {
		// TODO Auto-generated method stub
		return null;
	}

}
