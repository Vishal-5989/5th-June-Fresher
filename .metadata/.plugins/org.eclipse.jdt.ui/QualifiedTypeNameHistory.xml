<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="javax.persistence.OneToOne"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="com.springSecurity.entity.VerificationToken"/>
    <fullyQualifiedTypeName name="java.util.UUID"/>
    <fullyQualifiedTypeName name="java.lang.Long"/>
    <fullyQualifiedTypeName name="com.springSecurity.repository.PasswordResetTokenRepository"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletRequest"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="com.springSecurity.entity.PasswordResetToken"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.springSecurity.entity.User"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.springSecurity.model.PasswordModel"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="javax.transaction.Transactional"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="javax.persistence.Column"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="java.util.Collection"/>
    <fullyQualifiedTypeName name="org.hibernate.secure.spi.GrantedPermission"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.GrantedAuthority"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Configurable"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="net.bytebuddy.dynamic.TypeResolutionStrategy.Passive"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
    <fullyQualifiedTypeName name="org.springframework.core.Ordered"/>
    <fullyQualifiedTypeName name="java.lang.SecurityException"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.OAuth2AuthorizationServerConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="com.authorizationServer.service.CustomUserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.BadCredentialsException"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.Customizer"/>
    <fullyQualifiedTypeName name="com.authorizationServer.service.CustomAuthenticationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
    <fullyQualifiedTypeName name="com.authorizationServer.repository.UserRepository"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.authorizationServer.entity.User"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
</qualifiedTypeNameHistroy>
